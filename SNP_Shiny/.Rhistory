library(stringr)
library(tidyverse)
library(shiny)
library(dplyr)
#Loading Data
gemini_data <- read.delim("./Galaxy_GEMINI_query.tabular")
unique_data <- read.table("./cleaned_data.tabular")
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Human-diseased-related SNPs Report"),
# Sidebar with a slider input for number of bins
tabsetPanel(
tabPanel("Raw_Data",
sidebarLayout(
sidebarPanel(textInput("disease_keyword", label = h4("Diseases Key Word")),submitButton(text = "Submit"),
checkboxGroupInput("columns", "Select columns to display",choices = names(gemini_data))),
mainPanel(tableOutput("raw_data_key_word")
))),
tabPanel("Unique_Data", dataTableOutput("unique_data"))
))
# Define server logic required to draw a histogram
server <- function(input, output) {
output$raw_data_key_word <- renderTable({
c <- tolower(input$disease_keyword)
table_filtered <-filter(gemini_data,grepl(c,gemini_data$clinvar_disease_name,ignore.case=TRUE))
columns = names(gemini_data)
if (!is.null(input$columns)){
columns = input$columns
}
table_filtered[,columns,drop=FALSE]})
output$unique_data <- renderDataTable(unique_data)
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('SNP_report.R')
library(dplyr)
library(tidyverse)
library(ggplot2)
#dnase-seq coverage in Kc cells for each base table.
cov.df <- read.table("/Users/apd20500/Desktop/hobo_project/dnase/Kc_cell/kc_depth_W.txt",header=FALSE) %>% rename(position=V1)
#insertion sites
insertion_sites <- read.table("/Users/apd20500/Desktop/hobo_project/insertion_site/Wstartingpoint_insertsite.txt",header=FALSE)
sites <- dplyr::pull(insertion_sites,V1)
#function to calculate average coverage of specific location relative to insertion sites.
ave_cov <- function(relative_pos){
left_join(data.frame(position=sites+relative_pos),cov.df,by="position") -> temp.df
return(mean(temp.df$V2))
}
#generate table containing average coverage in 200bp window centered around insertion sites.
mean.cov.df <- data.frame(relative_pos=-100:100)
mean.cov.df$coverage <- unlist(lapply(mean.cov.df$relative_pos,ave_cov))
#ggplot
ggplot(mean.cov.df,aes(x=relative_pos,y=coverage)) + geom_point() + ylim(0,15)
embryo_cov <- read.table("/Users/apd20500/Desktop/hobo_project/dnase/embryo/W_cov.txt",header=FALSE) %>% rename(position=V1)
ave_cov_em <- function(relative_pos){
left_join(data.frame(position=sites+relative_pos),embryo_cov,by="position") -> temp.df
return(mean(temp.df$V2))
}
mean.cov.df$em_coverage <- unlist(lapply(mean.cov.df$relative_pos,ave_cov_em))
ggplot(mean.cov.df,aes(x=relative_pos,y=em_coverage)) + geom_point() + ylim(0,65)
#dnase-seq coverage in Kc cells for each base table.
cov.df <- read.table("./data/kc_depth_W.txt",header=FALSE) %>% rename(position=V1)
#insertion sites
insertion_sites <- read.table("./Wstartingpoint_insertsite.txt",header=FALSE)
sites <- dplyr::pull(insertion_sites,V1)
#function to calculate average coverage of specific location relative to insertion sites.
ave_cov <- function(relative_pos){
left_join(data.frame(position=sites+relative_pos),cov.df,by="position") -> temp.df
return(mean(temp.df$V2))
}
#generate table containing average coverage in 200bp window centered around insertion sites.
mean.cov.df <- data.frame(relative_pos=-100:100)
mean.cov.df$coverage <- unlist(lapply(mean.cov.df$relative_pos,ave_cov))
#ggplot
ggplot(mean.cov.df,aes(x=relative_pos,y=coverage)) + geom_point() + ylim(0,15)
#similar for dnase-seq in embryo
embryo_cov <- read.table("./data/embryo_depth_W.txt",header=FALSE) %>% rename(position=V1)
ave_cov_em <- function(relative_pos){
left_join(data.frame(position=sites+relative_pos),embryo_cov,by="position") -> temp.df
return(mean(temp.df$V2))
}
mean.cov.df$em_coverage <- unlist(lapply(mean.cov.df$relative_pos,ave_cov_em))
ggplot(mean.cov.df,aes(x=relative_pos,y=em_coverage)) + geom_point() + ylim(0,65)
getwd
getwd()
